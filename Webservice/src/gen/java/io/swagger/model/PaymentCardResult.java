/*
 * Banking Utilities Application
 * This is a banking application server for (A) calculating monthly payments of homeowners' mortgages and (B) validating payment card numbers.
 *
 * OpenAPI spec version: 1.0.0-oas3
 * Contact: gr.szalay@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * PaymentCardResult
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2021-03-26T15:28:42.066Z[GMT]")
public class PaymentCardResult {
    @JsonProperty("cardNumber")
    private String cardNumber = null;

    @JsonProperty("validationResult")
    private Boolean validationResult = null;

    @JsonProperty("validationMessage")
    private String validationMessage = null;

    @JsonProperty("paymentSystemName")
    private String paymentSystemName = null;

    public PaymentCardResult cardNumber(String cardNumber) {
        this.cardNumber = cardNumber;
        return this;
    }

    /**
     * Get cardNumber
     *
     * @return cardNumber
     **/
    @JsonProperty("cardNumber")
    @Schema(example = "3562399090269796", description = "")
    public String getCardNumber() {
        return cardNumber;
    }

    public void setCardNumber(String cardNumber) {
        this.cardNumber = cardNumber;
    }

    public PaymentCardResult validationResult(Boolean validationResult) {
        this.validationResult = validationResult;
        return this;
    }

    /**
     * Get validationResult
     *
     * @return validationResult
     **/
    @JsonProperty("validationResult")
    @Schema(example = "true", description = "")
    public Boolean isValidationResult() {
        return validationResult;
    }

    public void setValidationResult(Boolean validationResult) {
        this.validationResult = validationResult;
    }

    public PaymentCardResult validationMessage(String validationMessage) {
        this.validationMessage = validationMessage;
        return this;
    }

    /**
     * Get validationMessage
     *
     * @return validationMessage
     **/
    @JsonProperty("validationMessage")
    @Schema(example = "Payment Card with number 3562 3990 9026 9796 is VALID. The card issuer is JCB.", description = "")
    public String getValidationMessage() {
        return validationMessage;
    }

    public void setValidationMessage(String validationMessage) {
        this.validationMessage = validationMessage;
    }

    public PaymentCardResult paymentSystemName(String paymentSystemName) {
        this.paymentSystemName = paymentSystemName;
        return this;
    }

    /**
     * Get paymentSystemName
     *
     * @return paymentSystemName
     **/
    @JsonProperty("paymentSystemName")
    @Schema(example = "JCB", description = "")
    public String getPaymentSystemName() {
        return paymentSystemName;
    }

    public void setPaymentSystemName(String paymentSystemName) {
        this.paymentSystemName = paymentSystemName;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PaymentCardResult paymentCardResult = (PaymentCardResult) o;
        return Objects.equals(this.cardNumber, paymentCardResult.cardNumber) &&
                Objects.equals(this.validationResult, paymentCardResult.validationResult) &&
                Objects.equals(this.validationMessage, paymentCardResult.validationMessage) &&
                Objects.equals(this.paymentSystemName, paymentCardResult.paymentSystemName);
    }

    @Override
    public int hashCode() {
        return Objects.hash(cardNumber, validationResult, validationMessage, paymentSystemName);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PaymentCardResult {\n");

        sb.append("    cardNumber: ").append(toIndentedString(cardNumber)).append("\n");
        sb.append("    validationResult: ").append(toIndentedString(validationResult)).append("\n");
        sb.append("    validationMessage: ").append(toIndentedString(validationMessage)).append("\n");
        sb.append("    paymentSystemName: ").append(toIndentedString(paymentSystemName)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
